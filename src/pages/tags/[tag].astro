---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
export async function getStaticPaths() {
    const allPosts = await getCollection("blog");
    const uniqueTags = [
        ...new Set(allPosts.map((post: any) => post.data.tags).flat()),
    ];
    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post: any) =>
            post.data.tags.includes(tag)
        );
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter((post: any) =>
    post.data.tags?.includes(tag)
);
---

<BaseLayout pageTitle={tag}>
    <div class="blogs">
        <div class="block">
            <h2>{tag}</h2>
        </div>
        <div class="post--list">
            {
                filteredPosts.map((post: any) => (
                    <article class="post">
                        <div class="image--container">
                            <img
                                src={post.data.image.url}
                                alt={post.data.image.alt}
                            />
                        </div>
                        <div class="content--container">
                            <h1>
                                <a href={`/posts/${post.id}/`}>
                                    {post.data.title}
                                </a>
                            </h1>
                            <p>{post.data.description}</p>
                            <small>
                                {post.data.author} -{" "}
                                {new Date(
                                    post.data["Published on"]
                                ).toLocaleDateString()}
                            </small>
                            <div class="categories">
                                {post.data.tags.map((tag: any) => (
                                    <a href={`/tags/${tag}`} class="category">
                                        {tag}
                                    </a>
                                ))}
                            </div>
                        </div>
                    </article>
                ))
            }
        </div>
    </div>
</BaseLayout>
